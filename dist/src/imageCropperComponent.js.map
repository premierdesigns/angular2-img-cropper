{"version":3,"sources":["../../src/imageCropperComponent.ts"],"names":[],"mappings":"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","file":"imageCropperComponent.js","sourceRoot":"","sourcesContent":["import {Component, Input, Renderer2, ViewChild, ElementRef, Output, EventEmitter, Type, AfterViewInit, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\r\nimport {ImageCropper} from './imageCropper';\r\nimport {CropperSettings} from './cropperSettings';\r\nimport {Exif} from './exif';\r\nimport {Bounds} from './model/bounds';\r\nimport {CropPosition} from './model/cropPosition';\r\n\r\n\r\nexport class ImageCropperComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n     cropcanvas:ElementRef;\r\n\r\n     public settings:CropperSettings;\r\n     public image:any;\r\n     public inputImage:any;\r\n     public cropper:ImageCropper;\r\n     public cropPosition:CropPosition;\r\n     public cropPositionChange:EventEmitter<CropPosition> = new EventEmitter<CropPosition>();\r\n\r\n     public onCrop:EventEmitter<any> = new EventEmitter();\r\n\r\n    public croppedWidth:number;\r\n    public croppedHeight:number;\r\n    public intervalRef:number;\r\n    public raf:number;\r\n    public renderer:Renderer2;\r\n    public windowListener: EventListenerObject;\r\n\r\n    private isCropPositionUpdateNeeded:boolean;\r\n\r\n    constructor(renderer:Renderer2) {\r\n        this.renderer = renderer;\r\n    }\r\n\r\n    public ngAfterViewInit():void {\r\n        let canvas:HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n\r\n        if (!this.settings) {\r\n            this.settings = new CropperSettings();\r\n        }\r\n\r\n        if (this.settings.cropperClass) {\r\n            this.renderer.setAttribute(canvas, 'class', this.settings.cropperClass);\r\n        }\r\n\r\n        if (!this.settings.dynamicSizing) {\r\n            this.renderer.setAttribute(canvas, 'width', this.settings.canvasWidth.toString());\r\n            this.renderer.setAttribute(canvas, 'height', this.settings.canvasHeight.toString());\r\n        } else {\r\n            this.windowListener = this.resize.bind(this);\r\n            window.addEventListener('resize', this.windowListener);\r\n        }\r\n\r\n        if (!this.cropper) {\r\n            this.cropper = new ImageCropper(this.settings);\r\n        }\r\n\r\n        this.cropper.prepare(canvas);\r\n    }\r\n\r\n    public ngOnChanges(changes:SimpleChanges):void {\r\n        if (this.isCropPositionChanged(changes)) {\r\n            this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n            if (this.cropper.isImageSet()) {\r\n                let bounds = this.cropper.getCropBounds();\r\n                this.image.image = this.cropper.getCroppedImageHelper().src;\r\n                this.onCrop.emit(bounds);\r\n            }\r\n            this.updateCropBounds();\r\n        }\r\n\r\n        if (changes.inputImage) {\r\n          this.setImage(changes.inputImage.currentValue);\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        if (this.settings.dynamicSizing && this.windowListener) {\r\n            window.removeEventListener('resize', this.windowListener);\r\n        }\r\n    }\r\n\r\n    public onTouchMove(event:TouchEvent):void {\r\n        this.cropper.onTouchMove(event);\r\n    }\r\n\r\n    public onTouchStart(event:TouchEvent):void {\r\n        this.cropper.onTouchStart(event);\r\n    }\r\n\r\n    public onTouchEnd(event:TouchEvent):void {\r\n        this.cropper.onTouchEnd(event);\r\n        if (this.cropper.isImageSet()) {\r\n            this.image.image = this.cropper.getCroppedImageHelper().src;\r\n            this.onCrop.emit(this.cropper.getCropBounds());\r\n            this.updateCropBounds();\r\n        }\r\n    }\r\n\r\n    public onMouseDown(event:MouseEvent):void {\r\n        this.cropper.onMouseDown(event);\r\n    }\r\n\r\n    public onMouseUp(event:MouseEvent):void {\r\n        if (this.cropper.isImageSet()) {\r\n            this.cropper.onMouseUp(event);\r\n            this.image.image = this.cropper.getCroppedImageHelper().src;\r\n            this.onCrop.emit(this.cropper.getCropBounds());\r\n            this.updateCropBounds();\r\n        }\r\n    }\r\n\r\n    public onMouseMove(event:MouseEvent):void {\r\n        this.cropper.onMouseMove(event);\r\n    }\r\n\r\n    public fileChangeListener($event:any) {\r\n        if($event.target.files.length === 0) return;\r\n\r\n        let file:File = $event.target.files[0];\r\n        if (this.settings.allowedFilesRegex.test(file.name)) {\r\n            let image:any = new Image();\r\n            let fileReader:FileReader = new FileReader();\r\n\r\n            fileReader.addEventListener('loadend', (loadEvent:any) => {\r\n                image.addEventListener('load', () => {\r\n                    this.setImage(image);\r\n                });\r\n                image.src = loadEvent.target.result;\r\n            });\r\n\r\n            fileReader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    private resize() {\r\n        let canvas:HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n        this.settings.canvasWidth = canvas.offsetWidth;\r\n        this.settings.canvasHeight = canvas.offsetHeight;\r\n        this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, true);\r\n    }\r\n\r\n    public reset():void {\r\n        this.cropper.reset();\r\n        this.renderer.setAttribute(this.cropcanvas.nativeElement, 'class', this.settings.cropperClass);\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n    }\r\n\r\n    public setImage(image:HTMLImageElement, newBounds:any = null) {\r\n        this.renderer.setAttribute(this.cropcanvas.nativeElement, 'class', `${this.settings.cropperClass} ${this.settings.croppingClass}`);\r\n        this.raf = window.requestAnimationFrame(() => {\r\n            if (this.raf) {\r\n                window.cancelAnimationFrame(this.raf);\r\n            }\r\n            if (image.naturalHeight > 0 && image.naturalWidth > 0) {\r\n\r\n                image.height = image.naturalHeight;\r\n                image.width = image.naturalWidth;\r\n\r\n                window.cancelAnimationFrame(this.raf);\r\n                this.getOrientedImage(image, (img:HTMLImageElement) => {\r\n                    if (this.settings.dynamicSizing) {\r\n                        let canvas:HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n                        this.settings.canvasWidth = canvas.offsetWidth;\r\n                        this.settings.canvasHeight = canvas.offsetHeight;\r\n                        this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, false);\r\n                    }\r\n\r\n                    this.cropper.setImage(img);\r\n                    if (this.cropPosition && this.cropPosition.isInitialized()) {\r\n                        this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n                    }\r\n\r\n                    this.image.original = img;\r\n                    let bounds = this.cropper.getCropBounds();\r\n                    this.image.image = this.cropper.getCroppedImageHelper().src;\r\n\r\n                    if (!this.image) {\r\n                        this.image = image;\r\n                    }\r\n\r\n                    if (newBounds != null) {\r\n                        bounds = newBounds;\r\n                        this.cropper.setBounds(bounds);\r\n                        this.cropper.updateCropPosition(bounds);\r\n                    }\r\n                    this.onCrop.emit(bounds);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private isCropPositionChanged(changes:SimpleChanges):boolean {\r\n        if (this.cropper && changes['cropPosition'] && this.isCropPositionUpdateNeeded) {\r\n            return true;\r\n        } else {\r\n            this.isCropPositionUpdateNeeded = true;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private updateCropBounds():void {\r\n        let cropBound:Bounds = this.cropper.getCropBounds();\r\n        this.cropPositionChange.emit(new CropPosition(cropBound.left, cropBound.top, cropBound.width, cropBound.height));\r\n        this.isCropPositionUpdateNeeded = false;\r\n    }\r\n\r\n    private getOrientedImage(image:HTMLImageElement, callback:Function) {\r\n        let img:any;\r\n\r\n        Exif.getData(image, function () {\r\n            let orientation = Exif.getTag(image, 'Orientation');\r\n\r\n            if ([3, 6, 8].indexOf(orientation) > -1) {\r\n                let canvas:HTMLCanvasElement = document.createElement('canvas'),\r\n                    ctx:CanvasRenderingContext2D = <CanvasRenderingContext2D> canvas.getContext('2d'),\r\n                    cw:number = image.width,\r\n                    ch:number = image.height,\r\n                    cx:number = 0,\r\n                    cy:number = 0,\r\n                    deg:number = 0;\r\n\r\n                switch (orientation) {\r\n                    case 3:\r\n                        cx = -image.width;\r\n                        cy = -image.height;\r\n                        deg = 180;\r\n                        break;\r\n                    case 6:\r\n                        cw = image.height;\r\n                        ch = image.width;\r\n                        cy = -image.height;\r\n                        deg = 90;\r\n                        break;\r\n                    case 8:\r\n                        cw = image.height;\r\n                        ch = image.width;\r\n                        cx = -image.width;\r\n                        deg = 270;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                canvas.width = cw;\r\n                canvas.height = ch;\r\n                ctx.rotate(deg * Math.PI / 180);\r\n                ctx.drawImage(image, cx, cy);\r\n                img = document.createElement('img');\r\n                img.width = cw;\r\n                img.height = ch;\r\n                img.addEventListener('load', function () {\r\n                    callback(img);\r\n                });\r\n                img.src = canvas.toDataURL('image/png');\r\n            } else {\r\n                img = image;\r\n                callback(img);\r\n            }\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'img-cropper',\r\n    template: `\r\n        <span class=\"ng2-imgcrop\">\r\n          <input *ngIf=\"!settings.noFileInput\" type=\"file\" accept=\"image/*\" (change)=\"fileChangeListener($event)\">\r\n          <canvas #cropcanvas\r\n                  (mousedown)=\"onMouseDown($event)\"\r\n                  (mouseup)=\"onMouseUp($event)\"\r\n                  (mousemove)=\"onMouseMove($event)\"\r\n                  (mouseleave)=\"onMouseUp($event)\"\r\n                  (touchmove)=\"onTouchMove($event)\"\r\n                  (touchend)=\"onTouchEnd($event)\"\r\n                  (touchstart)=\"onTouchStart($event)\">\r\n          </canvas>\r\n        </span>\r\n      `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cropcanvas': [{ type: ViewChild, args: ['cropcanvas', undefined, ] },],\n'settings': [{ type: Input, args: ['settings', ] },],\n'image': [{ type: Input, args: ['image', ] },],\n'inputImage': [{ type: Input, args: ['inputImage', ] },],\n'cropper': [{ type: Input },],\n'cropPosition': [{ type: Input },],\n'cropPositionChange': [{ type: Output },],\n'onCrop': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
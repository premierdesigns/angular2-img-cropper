{"version":3,"sources":["../../src/cropperSettings.ts"],"names":[],"mappings":"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","file":"cropperSettings.js","sourceRoot":"","sourcesContent":["import { CropperDrawSettings } from \"./cropperDrawSettings\";\r\n\r\nexport interface ICropperSettings {\r\n    canvasWidth?: number;\r\n    canvasHeight?: number;\r\n    width?: number;\r\n    height?: number;\r\n    minWidth?: number;\r\n    minHeight?: number;\r\n    minWithRelativeToResolution?: boolean;\r\n    croppedWidth?: number;\r\n    croppedHeight?: number;\r\n    touchRadius?: number;\r\n    cropperDrawSettings?: any;\r\n    noFileInput?: boolean;\r\n    allowedFilesRegex?: RegExp;\r\n    rounded: boolean;\r\n    diamond: boolean;\r\n    keepAspect: boolean;\r\n    preserveSize: boolean;\r\n    cropOnResize: boolean;\r\n    compressRatio: number;\r\n}\r\n\r\nexport class CropperSettings implements ICropperSettings {\r\n  public canvasWidth: number = 300;\r\n  public canvasHeight: number = 300;\r\n\r\n  public dynamicSizing: boolean = false;\r\n  public cropperClass: string;\r\n  public croppingClass: string;\r\n\r\n  public width: number = 200;\r\n  public height: number = 200;\r\n\r\n  public minWidth: number = 50;\r\n  public minHeight: number = 50;\r\n  public minWithRelativeToResolution: boolean = true;\r\n\r\n  public croppedWidth: number = 100;\r\n  public croppedHeight: number = 100;\r\n\r\n  public cropperDrawSettings: CropperDrawSettings = new CropperDrawSettings();\r\n  public touchRadius: number = 20;\r\n  public noFileInput: boolean = false;\r\n\r\n  public fileType: string;\r\n\r\n  public resampleFn: Function;\r\n\r\n  public markerSizeMultiplier: number = 1;\r\n  public centerTouchRadius: number = 20;\r\n  public showCenterMarker: boolean = true;\r\n\r\n  public allowedFilesRegex: RegExp = /\\.(jpe?g|png|gif|bmp)$/i;\r\n  public cropOnResize: boolean = true;\r\n  public preserveSize: boolean = false;\r\n\r\n  public compressRatio: number = 1.0;\r\n  private _rounded: boolean = false;\r\n  private _diamond: boolean = false;\r\n  private _keepAspect: boolean = true;\r\n\r\n  constructor(settings?: any) {\r\n    if (typeof settings === \"object\") {\r\n      this.canvasWidth = settings.canvasWidth || this.canvasWidth;\r\n      this.canvasHeight = settings.canvasHeight || this.canvasHeight;\r\n      this.width = settings.width || this.width;\r\n      this.height = settings.height || this.height;\r\n      this.minWidth = settings.minWidth || this.minWidth;\r\n      this.minHeight = settings.minHeight || this.minHeight;\r\n      this.minWithRelativeToResolution =\r\n        settings.minWithRelativeToResolution ||\r\n        this.minWithRelativeToResolution;\r\n      this.croppedWidth = settings.croppedWidth || this.croppedWidth;\r\n      this.croppedHeight = settings.croppedHeight || this.croppedHeight;\r\n      this.touchRadius = settings.touchRadius || this.touchRadius;\r\n      this.cropperDrawSettings =\r\n        settings.cropperDrawSettings || this.cropperDrawSettings;\r\n      this.noFileInput = settings.noFileInput || this.noFileInput;\r\n      this.allowedFilesRegex =\r\n        settings.allowedFilesRegex || this.allowedFilesRegex;\r\n      this.rounded = settings.rounded || this.rounded;\r\n      this.keepAspect = settings.keepAspect || this.keepAspect;\r\n      this.preserveSize = settings.preserveSize || this.preserveSize;\r\n      this.cropOnResize = settings.cropOnResize || this.cropOnResize;\r\n      this.compressRatio = settings.compressRatio || this.compressRatio;\r\n\r\n      this.cropperDrawSettings =\r\n        settings.cropperDrawSettings || this.cropperDrawSettings;\r\n    }\r\n  }\r\n\r\n    set rounded(val: boolean) {\r\n        this._rounded = val;\r\n        this._diamond = !val;\r\n        if (val) {\r\n            this._keepAspect = true;\r\n        }\r\n    }\r\n\r\n  get rounded(): boolean {\r\n    return this._rounded;\r\n  }\r\n\r\n    set diamond(val: boolean) {\r\n        this._diamond = val;\r\n        this._rounded = !val;\r\n        if (val) {\r\n            this._keepAspect = true;\r\n        }\r\n    }\r\n    get diamond(): boolean {\r\n        return this._diamond;\r\n    }\r\n\r\n    set keepAspect(val: boolean) {\r\n        if (val === false && (this._rounded || this.diamond)) {\r\n            throw new Error('Cannot set keep aspect to false on rounded or diamond cropper. Ellipsis not supported');\r\n        }\r\n        this._keepAspect = val;\r\n    }\r\n\r\n  get keepAspect(): boolean {\r\n    return this._keepAspect;\r\n  }\r\n}\r\n"]}